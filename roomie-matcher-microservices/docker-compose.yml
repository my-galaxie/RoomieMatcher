version: '3.8'

services:
  # PostgreSQL databases
  postgres:
    image: postgres:15-alpine
    container_name: postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Auth Service
  auth-service:
    build:
      context: .
      dockerfile: auth-service/Dockerfile
    container_name: auth-service
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/roomie_auth
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      NOTIFICATION_SERVICE_URL: http://notification-service:8084
    ports:
      - "8081:8081"

  # Profile Service
  profile-service:
    build:
      context: .
      dockerfile: profile-service/Dockerfile
    container_name: profile-service
    depends_on:
      postgres:
        condition: service_healthy
      auth-service:
        condition: service_started
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/roomie_profile
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      AUTH_SERVICE_URL: http://auth-service:8081
      NOTIFICATION_SERVICE_URL: http://notification-service:8084
    ports:
      - "8082:8082"
      
  # Match Service
  match-service:
    build:
      context: .
      dockerfile: match-service/Dockerfile
    container_name: match-service
    depends_on:
      postgres:
        condition: service_healthy
      profile-service:
        condition: service_started
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/roomie_match
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      PROFILE_SERVICE_URL: http://profile-service:8082/api/v1
      NOTIFICATION_SERVICE_URL: http://notification-service:8084/api/v1
    ports:
      - "8083:8083"

  # Notification Service
  notification-service:
    build:
      context: .
      dockerfile: notification-service/Dockerfile
    container_name: notification-service
    depends_on:
      - maildev
    environment:
      # Configure this with valid SMTP settings or use a dev SMTP server
      SPRING_MAIL_HOST: maildev
      SPRING_MAIL_PORT: 25
      SPRING_MAIL_USERNAME: null
      SPRING_MAIL_PASSWORD: null
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH: false
      # Set notification provider
      NOTIFICATION_PROVIDER: standard
    ports:
      - "8084:8084"
      
  # API Gateway Service
  api-gateway:
    build:
      context: .
      dockerfile: api-gateway-service/Dockerfile
    container_name: api-gateway
    depends_on:
      - auth-service
      - profile-service
      - match-service
      - notification-service
    environment:
      AUTH_SERVICE_URL: http://auth-service:8081/api/v1
      PROFILE_SERVICE_URL: http://profile-service:8082/api/v1
      MATCH_SERVICE_URL: http://match-service:8083/api/v1
      NOTIFICATION_SERVICE_URL: http://notification-service:8084/api/v1
    ports:
      - "8080:8080"
      
  # SMTP server for local development
  maildev:
    image: maildev/maildev
    container_name: maildev
    ports:
      - "1080:1080" # Web interface
      - "1025:25"   # SMTP port

volumes:
  postgres-data:
